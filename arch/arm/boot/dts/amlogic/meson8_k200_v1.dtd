/dts-v1/;
/// ***************************************************************************************\n
//$$ PROJECT="meson8"
//$$ REMOVE 1
void root_func(){
//$$ ADD /{
	compatible = "AMLOGIC,8726_M8";
	model = "AMLOGIC";
	interrupt-parent = <&gic>;
	#address-cells = <1>;
	#size-cells = <1>;
	
/// ***************************************************************************************
///	-	CPU
//$$ MODULE="CPU"
    cpus {
        #address-cells = <1>;
        #size-cells = <0>;
//$$ DEVICE="cpu0"
        cpu@0 {
        	device_type = "cpu";
        	compatible = "arm,cortex-a9";
        	reg = <0x200>;
        };
//$$ DEVICE="cpu1"
        cpu@1 {
        	device_type = "cpu";
        	compatible = "arm,cortex-a9";
        	reg = <0x1>;
        };
//$$ DEVICE="cpu2"
        cpu@2 {
        	device_type = "cpu";
        	compatible = "arm,cortex-a9";
        	reg = <0x2>;
        };
//$$ DEVICE="cpu3"
        cpu@3 {
        	device_type = "cpu";
        	compatible = "arm,cortex-a9";
        	reg = <0x3>;
        };
    };

/// ***************************************************************************************
///	-	Cache
//$$ MODULE="Cache"
//$$ DEVICE="cache"
    cache-controller {
          compatible = "arm,meson-pl310-cache";
          reg = <0xc4200000 0x1000>;
          arm,data-latency = <3 3 3>;
          arm,tag-latency = <2 2 2>;
          cache-unified;
          cache-level = <2>;
          aux-instruction_prefetch;
          aux-data_prefetch;
          aux-ns_lockdown;
          aux-force_no_write_alloc;
          aux-cache_replace_policy_round_robin;
          aux-early_write_response;
          aux-full_line_of_zero;
          aux-ns_int_ctrl;
          aux-share_override;
          prefetch-double_line_fill;
          prefetch-prefetch_drop;
          prefetch-prefetch_offset = <7>;
    };

/// ***************************************************************************************
///	-	Memory
//$$ MODULE="Memory"
//$$ DEVICE="memory"
//$$ L2 PROP_U32 = "aml_reserved_start"
//$$ L2 PROP_U32 = "aml_reserved_end"
//$$ L2 PROP_U32 6 = "linux,usable-memory"
	memory{
		device_type = "memory";
		aml_reserved_start = <0x05000000>; /**reserved memory start */
		aml_reserved_end = <0x1e3fffff>;/**reserved memory end */
		linux,usable-memory = <0x00000000 0x04000000 0x1e400000 0x61c00000>;
	};
/// ***************************************************************************************
///	-	GIC
//$$ MODULE="GIC"
//$$ DEVICE="gic"	
	gic:interrupt-controller{
        compatible = "arm,cortex-a9-gic";
        reg = <0xc4301000 0x1000
               0xc4300100 0x0100>;
        interrupt-controller;
        #interrupt-cells = <3>;
        #address-cells = <0>;
    };
    
/// ***************************************************************************************
///	-	VPU
//$$ MODULE="VPU"
//$$ DEVICE="vpu"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "clk_level"
    vpu{
		compatible = "amlogic,vpu";
		dev_name = "vpu";	
		status = "ok";
		clk_level = <6>;	//for 4k2k
		/**    	0: 106.25M		1: 127.5M		2: 159.375M
				3: 182.15M		4: 212.5M		5: 255M
		    	6: 318.75M		7: 364.3M					 */
	};
	
/// ***************************************************************************************
///	-	ION
//$$ MODULE="ION"
//$$ DEVICE="ion_dev"
//$$ L2 PROP_STR = "status"
    ion_dev{
        compatible = "amlogic,ion_dev";
        dev_name = "ion_dev";
        status = "ok";
    };
/// **************************************************************************************	
/// -   DISP&MM-FB
//$$ MODULE = "DISP&MM-FB"	
//$$ DEVICE = "mesonfb"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 4 ="reg"
//$$ L2 PROP_U32 = "vmode"
//$$ L2 PROP_U32 5 = "display_size_default"
	mesonfb{
		compatible = "amlogic,mesonfb";
		dev_name = "mesonfb";
		status = "okay";
		reg = <0x05100000 0x01000000
	   	 		0x06100000 0x00100000>;
        vmode = <3>; /**0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P 3:VMODE_1080P*/
 		display_size_default = <1920 1080 1920 2160 32>;
	};
	
//$$ DEVICE="deinterlace"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 2 = "reg"
    	deinterlace{
		compatible = "amlogic,deinterlace";
		dev_name = "deinterlace";
		status = "ok";
		reg = <0x06200000 0x02300000>;
	};

/// ***************************************************************************************
///	-	DISP&MM-A/V stream
//$$ MODULE = "DISP&MM-A/V stream"
//$$ DEVICE="mesonstream"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 4 ="reg"
	mesonstream{
		compatible = "amlogic,mesonstream";
		dev_name = "mesonstream.0";
		status = "okay";
		reg = <0x0c400000 0x10000000
			   0x1c400000 0x02000000>;
	};


/// ***************************************************************************************
///	-	DISP&MM-PostProcess
//$$ MODULE="DISP&MM-PostProcess"
//$$ DEVICE="ppmgr"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
    ppmgr{
		compatible = "amlogic,ppmgr";
		dev_name = "ppmgr";
		status = "okay";
		reg = <0x08500000 0x03000000>;		
	};

/// ***************************************************************************************
///	-	DISP&MM-AVC Video Encoder
//$$ MODULE = "DISP&MM-AVC Video Encoder"
//$$ DEVICE="amvenc_avc"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
    amvenc_avc{
		compatible = "amlogic,amvenc_avc";
		dev_name = "amvenc_avc.0";
		status = "okay";
		reg = <0x0b500000 0x00f00000>;
	};

/// ***************************************************************************************
///	-	DISP&MM-VDIN
//$$ MODULE = "DISP&MM-VDIN"	
//$$ DEVICE="vdin1"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 2 = "reg"
//$$ L2 PROP_U32 = "irq"
//$$ L2 PROP_U32 = "vdin_id"
//    vdin1{
//        compatible = "amlogic,vdin";
//        dev_name = "vdin1";
//        status = "ok";
//        reg = <0x1e400000 0x04000000>;
//        irq = <117>;
//        vdin_id = <1>;
//	};

/// ***************************************************************************************
///	-	DISP&MM-AMLVIDEO2
//$$ MODULE = "DISP&MM-AMLVIDEO2"
//$$ DEVICE="amlvideo2"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//    amlvideo2{
//		compatible = "amlogic,amlvideo2";
//		dev_name = "amlvideo2.0";
//		status = "okay";
//		reg = <0x22400000 0x01800000>;
//	};

/// ***************************************************************************************
///	-	DISP&MM-Vout
//$$ MODULE = "DISP&MM-Vout"
//$$ DEVICE = "mesonvout"
//$$ L2 PROP_STR = "status"
	mesonvout{
		compatible = "amlogic,mesonvout";
		dev_name = "mesonvout";
		status = "okay";
	};

/// ***************************************************************************************
///	-	RTC
//$$ MODULE="RTC"
//$$ DEVICE="Rtc"
//$$ L2 PROP_STR = "status"
    rtc{
		compatible = "amlogic,aml_rtc";
		status = "okay";
	};

/// ***************************************************************************************
///	-	UART
//$$ MODULE="UART"
//$$ DEVICE="uart_ao"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L3 PROP_CHOICE "uart_ao_pin_match" = "pinctrl-0"
	uart_ao{
		compatible = "amlogic,aml_uart";
		port_name = "uart_ao";
		status = "okay";
		dev_name = "uart_ao";
		pinctrl-names = "default";
		pinctrl-0 = <&ao_uart_pins>;
	};
	
//$$ DEVICE="uart_0"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L3 PROP_CHOICE "uart_0_pin_match" = "pinctrl-0"
	uart_0{
		compatible = "amlogic,aml_uart";
		port_name = "uart_a";
		status = "okay";
		dev_name = "uart_0";
    	pinctrl-names = "default";
    	pinctrl-0 = <&a_uart_pins>;
	};
	
//$$ DEVICE="uart_1"
//$$ L2 PROP_STR = "status"
	uart_1{
		compatible = "amlogic,aml_uart";
		port_name = "uart_b";
		status = "disabled";
		dev_name = "uart_1";
	};
	
//$$ DEVICE="uart_2"
//$$ L2 PROP_STR = "status"
	uart_2{
		compatible = "amlogic,aml_uart";
		port_name = "uart_c";
		status = "disabled";
		dev_name = "uart_2";
	};
	
//$$ DEVICE="uart_3"
//$$ L2 PROP_STR = "status"	
	uart_3{
		compatible = "amlogic,aml_uart";
		port_name = "uart_d";
		status = "ok";
		dev_name = "uart_3";
	};

/// ***************************************************************************************
///	-	Bluetooth
//$$ MODULE="Bluetooth"
//$$ DEVICE="bt-dev"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "gpio_reset"
    bt-dev{
        compatible = "amlogic,bt-dev";
        dev_name = "bt-dev";
        status = "ok";
        gpio_reset = "GPIOX_20";
    };

/// ***************************************************************************************
///	-	WiFi
//$$ MODULE="WiFi"
//$$ DEVICE="aml_broadcm_wifi"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "interrupt_pin"
//$$ L2 PROP_U32 = "irq_num"
//$$ L2 PROP_STR = "irq_trigger_type"
//$$ L2 PROP_STR = "power_on_pin"
//$$ L2 PROP_STR = "clock_32k_pin"
    wifi{
		compatible = "amlogic,aml_broadcm_wifi";
		dev_name = "aml_broadcm_wifi";
		status = "okay";
		interrupt_pin = "GPIOX_21";
		irq_num = <4>;
		irq_trigger_type = "GPIO_IRQ_HIGH";
		power_on_pin = "GPIOAO_6";
		clock_32k_pin = "GPIOX_10";
	};
	
//$$ DEVICE="wifi_power"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_STR = "power_gpio"
	wifi_power{
            compatible = "amlogic,wifi_power";
            dev_name = "wifi_power";
            status = "okay";
            power_gpio = "GPIOAO_6";
	}; 

/// ***************************************************************************************
///	-	MMC
//$$ MODULE="MMC"
//$$ DEVICE="aml_sdio"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//$$ L2 PROP_STR 7 = "pinctrl-names"
//$$ L2 PROP_CHOICE "sdio_pin_0_match" = "pinctrl-0"
//$$ L2 PROP_CHOICE "sdio_pin_1_match" = "pinctrl-1"
//$$ L2 PROP_CHOICE "sdio_pin_2_match" = "pinctrl-2"
//$$ L2 PROP_CHOICE "sdio_pin_3_match" = "pinctrl-3"
//$$ L2 PROP_CHOICE "sdio_pin_4_match" = "pinctrl-4"
//$$ L2 PROP_CHOICE "sdio_pin_5_match" = "pinctrl-5"
//$$ L2 PROP_CHOICE "sdio_pin_6_match" = "pinctrl-6"
sdio{
        compatible = "amlogic,aml_sdio";
        dev_name = "aml_sdio.0";
        status = "okay";
        reg = <0xc1108c20 0x20>;
        pinctrl-names = "sd_clk_cmd_pins", "sd_all_pins", "emmc_clk_cmd_pins", "emmc_all_pins", "sdio_clk_cmd_pins", "sdio_all_pins","sd_1bit_pins"; // "jtag_pin", "uartao_default";
        pinctrl-0 = <&sd_clk_cmd_pins>;
        pinctrl-1 = <&sd_all_pins>;
        pinctrl-2 = <&emmc_clk_cmd_pins>;
        pinctrl-3 = <&emmc_all_pins>;
        pinctrl-4 = <&sdio_clk_cmd_pins>;
        pinctrl-5 = <&sdio_all_pins>;
        pinctrl-6 = <&sd_1bit_pins>;

//$$ DEVICE="sd"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 = "port"
//$$ L2 PROP_STR = "pinname"
//$$ L3 PROP_U32 = "ocr_avail"
//$$ L2 PROP_STR 3 = "caps"
//$$ L3 PROP_U32 = "f_min"
//$$ L3 PROP_U32 = "f_max"
//$$ L3 PROP_U32 = "max_req_size"
//$$ L2 PROP_STR = "gpio_dat3"
//$$ L2 PROP_STR = "jtag_pin"
//$$ L2 PROP_STR = "gpio_cd"
//$$ L2 PROP_U32 = "irq_in"
//$$ L2 PROP_U32 = "irq_out"
//$$ L2 PROP_U32 = "card_type"
        sd{
            status = "okay";
            port = <1>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
            pinname = "sd";
            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED";
            f_min = <300000>;
            f_max = <50000000>;
            max_req_size = <0x20000>;          /**128KB*/
            gpio_dat3 = "CARD_4";
            jtag_pin = "CARD_0";
            gpio_cd = "CARD_6";
            irq_in = <3>;
            irq_out = <5>;
            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
        };

//$$ DEVICE="emmc"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 = "port"
//$$ L2 PROP_STR = "pinname"
//$$ L3 PROP_U32 = "ocr_avail"
//$$ L2 PROP_STR 4 = "caps"
//$$ L3 PROP_U32 = "f_min"
//$$ L3 PROP_U32 = "f_max"
//$$ L3 PROP_U32 = "f_max_w"
//$$ L3 PROP_U32 = "max_req_size"
//$$ L2 PROP_STR = "gpio_dat3"       	
//$$ L2 PROP_U32 = "card_type"
        emmc{
            status = "ok";
            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
            pinname = "emmc";
            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
            f_min = <300000>;
            f_max = <50000000>;
            f_max_w = <50000000>;
            max_req_size = <0x20000>;          /**128KB*/
            gpio_dat3 = "BOOT_3";
            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
        };
    };

/// ***************************************************************************************
///	-	I2C
//$$ MODULE="I2C"
//$$ DEVICE="I2C_AO"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//$$ L3 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "I2C_AO_pin_match" = "pinctrl-0"	
	i2c@c8100500{ /*I2C-AO*/
		compatible = "amlogic,aml_i2c";
		dev_name = "i2c-AO";
		status = "ok";
		reg = <0xc8100500 0x1d>;
		#address-cells = <1>;
		#size-cells = <0>;
		device_id = <0>;
		pinctrl-names="default";
		pinctrl-0=<&ao_i2c_master>;
	};

//$$ DEVICE = "I2C_A"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//$$ L3 PROP_STR = "pinctrl-names"
    i2c@c1108500{ /*I2C-A*/
		compatible = "amlogic,aml_i2c";
		dev_name = "i2c-A";
		status = "ok";
		reg = <0xc1108500 0x20>;
		device_id = <1>;
		pinctrl-names="default";
//		pinctrl-0=<&a_i2c_master>;
		#address-cells = <1>;
		#size-cells = <0>;
	};
	
//$$ DEVICE="I2C_B"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2="reg"
//$$ L3 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "I2C_B_pin_match" = "pinctrl-0"	
	i2c@c11087c0{ /*I2C-B*/
		compatible = "amlogic,aml_i2c";
		dev_name = "i2c-B";
		status = "ok";
		reg = <0xc11087c0 0x20>;
		device_id = <2>;
		pinctrl-names="default";
		pinctrl-0=<&b_i2c_master>;
		#address-cells = <1>;
		#size-cells = <0>;
 	};

//$$ DEVICE="I2C_C"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2="reg"
//$$ L3 PROP_STR = "pinctrl-names"	
    i2c@c11087e0{ /*I2C-C*/
		compatible = "amlogic,aml_i2c";
		dev_name = "i2c-C";
		status = "ok";
		reg = <0xc11087e0 0x20>;
		device_id = <3>;
		pinctrl-names="default";
//		pinctrl-0=<&c_i2c_master>;
		#address-cells = <1>;
		#size-cells = <0>;
	};

//$$ DEVICE="I2C_D"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2="reg"
//$$ L3 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "I2C_D_pin_match" = "pinctrl-0"	
	i2c@c1108d20{ /*I2C-D*/
		compatible = "amlogic,aml_i2c";
		dev_name = "i2c-D";
		status = "ok";
		reg = <0xc1108d20 0x20>;
		device_id = <4>;
		pinctrl-names="default";
		pinctrl-0=<&d_i2c_master>;
		#address-cells = <1>;
		#size-cells = <0>;
	};

/// ***************************************************************************************
///	-	Power
//$$ MODULE="Power"
//$$ DEVICE="dvfs"
//$$ L2 PROP_STR = "status"
    dvfs {
        compatible = "amlogic, amlogic-dvfs";                   /** fixed for driver, don't change       */
        #address-cells = <1>;
        #size-cells = <0>;
        status = "ok";

//$$ L2 PROP_U32 = "dvfs_id"
//$$ L2 PROP_U32 = "table_count"
//$$ L2 PROP_U32 16*3 = "dvfs_table"
        vcck_dvfs {
            dvfs_id     = <1>;                                  /** must be value of (1 << n)            */
            table_count = <14>;                                 /** must be correct count for dvfs_table */
            dvfs_table  = <
            /* NOTE: frequent in this table must be ascending order */
            /* frequent(Khz)    min_uV      max_uV                  */
                  96000         825000      825000
                 192000         825000      825000
                 312000         825000      825000
                 408000         825000      825000
                 504000         825000      825000
                 600000         850000      850000
                 720000         850000      850000
                 816000         875000      875000
                1008000         925000      925000
                1200000         975000      975000
                1416000        1025000     1025000
                1608000        1100000     1100000
                1800000        1125000     1125000
                1992000        1150000     1150000
            >;
        };
    };

//$$ DEVICE="arm_pmu"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 4*3 = "interrupts"
    arm_pmu {
        compatible = "arm,cortex-a9-pmu";
        status = "ok";
        interrupts = <0     137     0x04
                      0     138     0x04
                      0     153     0x04
                      0     154     0x04>;
    };

    pmu {
        compatible = "amlogic, aml_pmu_prober";                 /* fixed for pmu driver, don't change   */
        #address-cells = <1>;
        #size-cells = <0>;
//$$ DEVICE = "Pmu_axp202"
//$$ L2 PROP_STR = "sub_type"
//$$ L2 PROP_STR = "i2c_bus"
//$$ L2 PROP_U32 = "reg"
//$$ L2 PROP_U32 = "soft_limit_to99"
//$$ L2 PROP_U32 = "ddr_voltage"
//$$ L2 PROP_U32 = "vddao_voltage"
//$$ L2 PROP_STR = "status"
        axp202 { /* PMU for AXP */
            compatible = "axp_mfd";                             /* for driver probe, must have          */
            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
            reg = <0x34>;                                       /** device i2c address, must have        */
            soft_limit_to99 = <0>;                              /** optional                             */
            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
            status = "disable";                                 /** status of pmu, only one should be OK */
        };
//$$ DEVICE = "Pmu_aml1212"
//$$ L2 PROP_STR = "sub_type"
//$$ L2 PROP_STR = "i2c_bus"
//$$ L2 PROP_U32 = "reg"
//$$ L2 PROP_U32 = "soft_limit_to99"
//$$ L2 PROP_U32 = "ddr_voltage"
//$$ L2 PROP_U32 = "vddao_voltage"
//$$ L2 PROP_STR = "status"
        aml1212{                                                /* PMU for AML1212, see comment above   */
            compatible = "aml_pmu";                             /* for driver probe, must have          */
            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
            reg = <0x35>;                                       /** device i2c address, must have        */
            soft_limit_to99 = <0>;                              /** optional                             */
            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
            status = "disable";                                 /** status of pmu, only one should be OK */
        };
//$$ DEVICE = "Pmu_rn5t618"
//$$ L2 PROP_STR = "sub_type"
//$$ L2 PROP_STR = "i2c_bus"
//$$ L2 PROP_U32 = "reg"
//$$ L2 PROP_U32 = "soft_limit_to99"
//$$ L2 PROP_U32 = "ddr_voltage"
//$$ L2 PROP_U32 = "vddao_voltage"
//$$ L2 PROP_STR = "status"
        rn5t618{                                                /* PMU for RN5T618, see comment above   */
            compatible = "ricoh_pmu";                           /* for driver probe, must have          */
            sub_type = "rn5t618";                               /** sub type of pmu family, must have    */
            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
            reg = <0x32>;                                       /** device i2c address, must have        */
            soft_limit_to99 = <0>;                              /** optional                             */
            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
            status = "okay";                                    /** status of pmu, only one should be OK */
        };
    };

/// ***************************************************************************************
///	-	USB Controller
//$$ MODULE="USB Controller"
    usb_con {
		lm-compatible = "logicmodule-bus";

//$$ DEVICE="usb_b"
//$$ L2 PROP_U32 = "lm-periph-id" 
//$$ L2 PROP_STR = "clock-src"
//$$ L2 PROP_U32 = "port-id"
//$$ L2 PROP_U32 = "port-type"
//$$ L2 PROP_U32 = "port-speed"
//$$ L2 PROP_U32 = "port-config"
//$$ L2 PROP_U32 = "port-dma"
//$$ L2 PROP_U32 = "port-id-mode"
//$$ L2 PROP_STR = "status"
        	usb_b{
			lm-compatible = "amlogic,usb";
			lm-periph-id = <1>; /** lm name */
			clock-src = "usb1"; /** clock src */
			port-id = <1>;   /** ref to mach/usb.h */
			port-type = <1>;	/** 0: otg, 1: host, 2: slave */
			port-speed = <0>; /** 0: default, 1: high, 2: full */
			port-config = <0>; /** 0: default */
			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
			port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
			status = "okay";
		};
		
//$$ DEVICE="usb_a"
//$$ L2 PROP_U32 = "lm-periph-id"
//$$ L2 PROP_STR = "clock-src"
//$$ L2 PROP_U32 = "port-id"
//$$ L2 PROP_U32 = "port-type"
//$$ L2 PROP_U32 = "port-speed"
//$$ L2 PROP_U32 = "port-config"
//$$ L2 PROP_U32 = "port-dma"
//$$ L2 PROP_U32 = "port-id-mode"
//$$ L2 PROP_STR = "gpio-vbus-power"
//$$ L2 PROP_U32 = "gpio-work-mask"
//$$ L2 PROP_STR = "status"
		usb_a{
			lm-compatible = "amlogic,usb";
			lm-periph-id = <0>; /** lm name */
			clock-src = "usb0"; /** clock src */
			port-id = <0>;  /** ref to mach/usb.h */
			port-type = <0>;	/** 0: otg, 1: host, 2: slave */
			port-speed = <0>; /** 0: default, high, 1: full */
			port-config = <0>; /** 0: default */
			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
			port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
			gpio-vbus-power = "GPIOZ_1";
			gpio-work-mask	= <1>; /**0: work on pulldown,1:work on pullup*/
			status = "okay";
		};
	};


//$$ MATCH "lcd_model_config_match" = <&lcd_LP097QX1>
//$$ L2 PROP_STR = "model_name"
//$$ L2 PROP_STR = "interface"
//$$ L2 PROP_U32 2 = "active_area"
//$$ L2 PROP_U32 2 = "lcd_bits_option"
//$$ L2 PROP_U32 2 = "resolution"
//$$ L2 PROP_U32 2 = "period"
//$$ L2 PROP_U32 2 = "clock_hz_pol"
//$$ L2 PROP_U32 2 = "hsync_width_backporch"
//$$ L2 PROP_U32 2 = "vsync_width_backporch"
//$$ L2 PROP_U32 2 = "pol_hsync_vsync"		
	lcd_LP097QX1:lcd_LP097QX1{	//k100
		model_name="LP097QX1";	/** lcd model name */
		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
		
		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
		
		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
	};

//$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
//$$ L2 PROP_STR = "model_name"
//$$ L2 PROP_STR = "interface"
//$$ L2 PROP_U32 2 = "active_area"
//$$ L2 PROP_U32 2 = "lcd_bits_option"
//$$ L2 PROP_U32 2 = "resolution"
//$$ L2 PROP_U32 2 = "period"
//$$ L2 PROP_U32 2 = "clock_hz_pol"
//$$ L2 PROP_U32 2 = "hsync_width_backporch"
//$$ L2 PROP_U32 2 = "vsync_width_backporch"
//$$ L2 PROP_U32 2 = "pol_hsync_vsync"
//$$ L2 PROP_U32 3 = "dsi_clk"
//$$ L2 PROP_U32 = "lane_num"
//$$ L2 PROP_U32 3 = "pol_vs_hs_de"
//$$ L2 PROP_U32 2 = "dpi_color_type"
//$$ L2 PROP_U32 2 = "refresh_rate"
	lcd_B080XAN01:lcd_B080XAN01{	//k101
		model_name="B080XAN01";	/** lcd model name */
		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */

		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */

		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
                dsi_clk = <250 280 1>;  /** min_clk, max_clk, scaler**/

                lane_num=<4>;//lane num
                pol_vs_hs_de=<1 1 0>;
                dpi_color_type=<4 0>;
                refresh_rate =<60 0>;// refresh rate available only for 2560x1600
	};

//$$ MATCH "lcd_model_config_match" = <&lcd_CLAP070NJ02>
//$$ L2 PROP_STR = "model_name"
//$$ L2 PROP_STR = "interface"
//$$ L2 PROP_U32 2 = "active_area"
//$$ L2 PROP_U32 2 = "lcd_bits_option"
//$$ L2 PROP_U32 2 = "resolution"
//$$ L2 PROP_U32 2 = "period"
//$$ L2 PROP_U32 2 = "clock_hz_pol"
//$$ L2 PROP_U32 2 = "hsync_width_backporch"
//$$ L2 PROP_U32 2 = "vsync_width_backporch"
//$$ L2 PROP_U32 2 = "pol_hsync_vsync"
	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
		model_name="CLAP070NJ02";	/** lcd model name */
		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
		
		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
		
		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
	};

//$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
//$$ L2 PROP_STR = "model_name"
//$$ L2 PROP_STR = "interface"
//$$ L2 PROP_U32 2 = "active_area"
//$$ L2 PROP_U32 2 = "lcd_bits_option"
//$$ L2 PROP_U32 2 = "resolution"
//$$ L2 PROP_U32 2 = "period"
//$$ L2 PROP_U32 2 = "clock_hz_pol"
//$$ L2 PROP_U32 2 = "hsync_width_backporch"
//$$ L2 PROP_U32 2 = "vsync_width_backporch"
//$$ L2 PROP_U32 2 = "pol_hsync_vsync"
	lcd_TN070TN92:lcd_TN070TN92{	//800*480
		model_name="TN070TN92";	/** lcd model name */
		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
		
		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
		
		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
	};

//$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
//$$ L2 PROP_STR = "model_name"
//$$ L2 PROP_STR = "interface"
//$$ L2 PROP_U32 2 = "active_area"
//$$ L2 PROP_U32 2 = "lcd_bits_option"
//$$ L2 PROP_U32 2 = "resolution"
//$$ L2 PROP_U32 2 = "period"
//$$ L2 PROP_U32 2 = "clock_hz_pol"
//$$ L2 PROP_U32 2 = "hsync_width_backporch"
//$$ L2 PROP_U32 2 = "vsync_width_backporch"
//$$ L2 PROP_U32 2 = "pol_hsync_vsync"	
	lcd_LP097X02:lcd_LP097X02{	//g24
		model_name="LP097X02";	/** lcd model name */
		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
		
		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
		
		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
	};

/// ***************************************************************************************
///	-	Spi
//$$ MODULE="Spi"
//$$ DEVICE="spi"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 2 = "reg"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "Spi_pin_0_match" = "pinctrl-0"
//$$ L2 PROP_U32 = "nr-parts"
//$$ L2 PROP_CHOICE "Spi_nr-part-0_match" = "nr-part-0"
//$$ L2 PROP_CHOICE "Spi_nr-part-1_match" = "nr-part-1"
    spi@cc000000{
		compatible = "amlogic,apollo_spi_nor";
		status = "ok";
		reg = <0xcc000000 0x04000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&aml_spi_nor_pins>;

		nr-parts = <2>;
		nr-part-0 = <&bootloader>;
		nr-part-1 = <&ubootenv>;

//$$ MATCH "Spi_nr-part-0_match" = <&bootloader>
//$$ L2 PROP_STR = "name"
//$$ L2 PROP_U32 = "offset"
//$$ L2 PROP_U32 = "size"
		bootloader:bootloader{
			name = "bootloader";
			offset = <0>;
			size = <0x60000>;
		};

//$$ MATCH "Spi_nr-part-1_match" = <&ubootenv>
//$$ L2 PROP_STR = "name"
//$$ L2 PROP_U32 = "offset"
//$$ L2 PROP_U32 = "size"
		ubootenv:ubootenv{
			name = "ubootenv";
		      offset = <0x100000>;
		      size = <0x10000>;
		};
	};

// ***************************************************************************************
///	-	Nand
//$$ MODULE="Nand"
//$$ DEVICE="aml_nand"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 2 ="reg"
//$$ L2 PROP_STR 2 = "pinctrl-names"
//$$ L2 PROP_CHOICE 3 "Nand_pin_0_match" = "pinctrl-0"
//$$ L2 PROP_CHOICE 3 "Nand_pin_1_match" = "pinctrl-1"
//$$ L3 PROP_STR ="plat-names"
//$$ L2 PROP_U32 = "plat-num"
//$$ L2 PROP_CHOICE "plat-part-0_match" = "plat-part-0"
	nand{
		compatible = "amlogic,aml_nand";
		dev_name = "nand";
		status = "ok";
		reg = <0xd0048600 0x24>;
		pinctrl-names = "nand_rb_mod","nand_norb_mod";
		pinctrl-0 = <&nand_input_state &conf_nand_state &nand_base>;
		pinctrl-1 = <&nand_input_state &conf_nand_state &nand_base>;
		device_id = <0>;
		plat-names = "nandnormal";
		plat-num = <1>;
		plat-part-0 = <&normal>;

//$$ MATCH "plat-part-0_match" = <&normal>
//$$ L2 PROP_STR 4 = "enable_pad"
//$$ L2 PROP_STR = "busy_pad"
		normal: normal{
			enable_pad ="ce0","ce1","ce2","ce3";
			busy_pad = "rb0";
		};
	};

/// ***************************************************************************************
///	-	Efuse
//$$ MODULE="Efuse"
//$$ DEVICE="efuse"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 2 = "plat-pos"
//$$ L2 PROP_U32 = "plat-count"
//$$ L2 PROP_U32 = "usid-min"
//$$ L2 PROP_U32 = "usid-max"
    efuse{
		compatible = "amlogic,efuse";
		dev_name = "efuse";
		status = "okay";
		plat-pos = <0 454>;
		plat-count = <58>;
		usid-min = <8>; /*reserved*/
		usid-max = <31>; /*reserved*/
	};

/// ***************************************************************************************
///	-	Audio
//$$ MODULE="Audio"
//$$ DEVICE="audio_platform"
//$$ L2 PROP_STR = "status"
    audio_platform{
        compatible = "amlogic,aml-audio";
        dev_name = "aml-audio.0";
        status = "okay";
    };

//$$ DEVICE="audio_dai"
//$$ L2 PROP_STR = "status"
    audio_dai{
        compatible = "amlogic,aml-i2s-dai";
        dev_name = "aml-i2s-dai.0";
        status = "okay";
    };
    audio_spdif_dai{
        compatible = "amlogic,aml-spdif-dai";
        dev_name = "aml-spdif-dai.0";
        status = "okay";
    };

    audio_spdif_codec{
        compatible = "amlogic,aml-spdif-codec";
        dev_name = "spdif-dit.0";
        status = "okay";
    };
//$$ DEVICE="audio_m8_audio"
//$$ L2 PROP_STR = "status"
    audio_m8_audio{
        compatible = "amlogic,m8_audio_codec";
        dev_name = "aml_m8_codec.0";
        status = "okay";
    };

//$$ DEVICE="aml_m8_sound_card"
//$$ L2 PROP_STR = "aml,sound_card"
//$$ L2 PROP_STR = "aml,codec_dai"
//$$ L2 PROP_STR 6*2 = "aml,audio-routing"
//$$ L2 PROP_STR = "mute_gpio"
//$$ L2 PROP_U32 5 = "hp_paraments"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "Audio_pin_0_match" = "pinctrl-0"
//$$ L2 PROP_STR = "status"
    aml_m8_sound_card{
        compatible = "sound_card, aml_snd_m8";
        aml,sound_card = "AML-M8AUDIO";
        aml,codec_dai = "AML-M8","dit-hifi";
        aml,audio-routing =
            "Ext Spk","LINEOUTL",
            "Ext Spk","LINEOUTR",
            "HP","HP_L",
            "HP","HP_R",
            "MICBIAS","MAIN MIC",
            "LINPUT1","MICBIAS";

        mute_gpio = "GPIO_BSD_EN";
        hp_paraments = <800 300 0 5 1>;
        pinctrl-names = "aml_snd_m8";
        pinctrl-0 = <&audio_pins>;
        status = "okay";
        
    };

/// ***************************************************************************************
///	-	Input
//$$ MODULE="Input"
//$$ DEVICE="gpio_keypad"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "scan_period"
//$$ L2 PROP_U32 = "key_num"
//$$ L2 PROP_STR = "key_name"
//$$ L2 PROP_U32 = "key_code"
//$$ L2 PROP_STR = "key_pin"
//$$ L2 PROP_U32 = "irq_keyup"
//$$ L2 PROP_U32 = "irq_keydown"
    gpio_keypad{
		compatible = "amlogic,gpio_keypad";
		status = "okay";
		scan_period = <20>;
		key_num = <1>;
        key_name = "power";
		key_code = <116>;
		key_pin = "GPIOAO_3";
        irq_keyup = <6>;
        irq_keydown = <7>;
	};
//$$ DEVICE="saradc"
//$$ L2 PROP_STR = "status"
	saradc{
		compatible = "amlogic,saradc";
		status = "okay";
	};
	
//$$ DEVICE="meson-remote"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_U32 = "ao_baseaddr"
//$$ L2 PROP_STR = "pinctrl-names"
//$$ L2 PROP_CHOICE "remote_pin_0_match" = "pinctrl-0"
    meson-remote{
		compatible = "amlogic,aml_remote";
		dev_name = "meson-remote";
		status = "ok";
		ao_baseaddr = <0xf3100480>;
		pinctrl-names="default";
		pinctrl-0=<&remote_pins>;
	};
	
/// ***************************************************************************************
///	-	Securitykey
//$$ MODULE="Securitykey"
//$$ DEVICE="securitykey"
//$$ L2 PROP_STR = "status"
    securitykey{
		compatible = "amlogic,aml_keys";
		status = "ok";
	};

/// ***************************************************************************************
///	-	Unifykey
//$$ MODULE="Unifykey"
//$$ DEVICE="securitykey"
//$$ L2 PROP_STR = "status"
//$$ L3 PROP_U32 ="unifykey-num"
//$$ L2 PROP_CHOICE "Unifykey_0_match" = "unifykey-index-0"
//$$ L2 PROP_CHOICE "Unifykey_1_match" = "unifykey-index-1"
//$$ L2 PROP_CHOICE "Unifykey_2_match" = "unifykey-index-2"
    	unifykey{
		compatible = "amlogic,unifykey";
		status = "ok";

		/*efuse-version = <0>;*/ /*m6 efuse version 2,m3 efuse version 1, not config efuse version in default*/
		unifykey-num = <3>;
		unifykey-index-0 = <&keysn_0>;
		unifykey-index-1 = <&keysn_1>;
		unifykey-index-2 = <&keysn_2>;


//$$ MATCH "Unifykey_0_match" = <&keysn_0>
//$$ L2 PROP_STR = "key-name"
//$$ L2 PROP_STR = "key-device"
//$$ L2 PROP_STR = "key-dataformat"
//$$ L2 PROP_STR 3 = "key-permit"
		keysn_0: key_0{
			key-name = "key0";
			key-device = "nandkey";
			key-dataformat = "hexdata";
			key-permit = "read","write","del";
		};
		
//$$ MATCH "Unifykey_1_match" = <&keysn_1>
//$$ L2 PROP_STR = "key-name"
//$$ L2 PROP_STR = "key-device"
//$$ L2 PROP_STR = "key-dataformat"
//$$ L2 PROP_STR 3 = "key-permit"
		keysn_1:key_1{
			key-name = "key1";
			key-device = "nandkey";
			key-dataformat = "hexdata";
			key-permit = "read","write","del";
		};
		
//$$ MATCH "Unifykey_2_match" = <&keysn_2>
//$$ L2 PROP_STR = "key-name"
//$$ L2 PROP_STR = "key-device"
//$$ L2 PROP_STR = "key-dataformat"
//$$ L2 PROP_STR 3 = "key-permit"
		keysn_2:key_2{
			key-name = "key2";
			key-device = "nandkey";
			key-dataformat = "hexdata";
			key-permit = "read","write","del";
		};
	};
	
/// ***************************************************************************************
///	-	HDMI
//$$ MODULE="HDMI"
//$$ DEVICE="amhdmitx"
//$$ L2 PROP_STR = "status"
//$$ L2 PROP_CHOICE "HDMI_vend-data_match" = "vend-data"
//$$ L2 PROP_CHOICE "HDMI_pwr-ctrl_match" = "pwr-ctrl"
    amhdmitx{
		compatible = "amlogic,amhdmitx";
		dev_name = "amhdmitx";
		status = "ok";
        vend-data = <&vend_data>;
        pwr-ctrl = <&pwr_ctrl>;
        
//$$ MATCH "HDMI_vend-data_match" = <&vend_data>
//$$ L2 PROP_STR = "vendor_name"
//$$ L2 PROP_U32 = "vendor_id"
//$$ L2 PROP_STR = "product_desc"
//$$ L2 PROP_STR = "cec_osd_string"        
        vend_data: vend_data{
            vendor_name = "Amlogic";           /* Max Chars: 8     */
            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
        };
        
//$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
//$$ L2 PROP_STR = "pwr_5v_on"
//$$ L2 PROP_STR = "pwr_5v_off"
//$$ L2 PROP_STR = "pwr_3v3_on"
//$$ L2 PROP_STR = "pwr_3v3_off"
//$$ L2 PROP_STR = "pwr_hpll_vdd_on"
//$$ L2 PROP_STR = "pwr_hpll_vdd_off"
        pwr_ctrl: pwr_ctrl{
            pwr_5v_on = "";
            pwr_5v_off = "";
            pwr_3v3_on = "";
            pwr_3v3_off = "";
            pwr_hpll_vdd_on = "";
            pwr_hpll_vdd_off = "";
        };
	};

/// ***************************************************************************************
///	-	PowerManager
//$$ MODULE="PowerManager"
//$$ DEVICE="amvenc_avc"
//$$ L2 PROP_STR = "status"
    aml_pm{
		compatible = "amlogic,pm-m8";
		dev_name = "aml_pm_m8";
		status = "okay";
	};

/// ***************************************************************************************
///	-	Cpufreq
//$$ MODULE="Cpufreq"
//$$ DEVICE="cpufreq-meson"
//$$ L2 PROP_STR = "status"
    cpufreq-meson{
        compatible = "amlogic,cpufreq-meson";
        status = "okay";
    };

    crypto_device{
       compatible = "amlogic,crypto-device";
       dev_name = "crypto_device";
    };

/// **************************************************************************************
/// -   GPIO
//$$ MODULE="GPIO"
//$$ DEVICE="m8-gpio"
	gpio:gpio{
		compatible = "amlogic,m8-gpio";
		dev_name = "gpio";
		#gpio-cells=<2>;
	};

/// **************************************************************************************
/// -   Pinmux
//$$ MODULE="Pinmux"
//$$ DEVICE="pinmux-m8"
    pinmux{ 
		compatible = "amlogic,pinmux-m8";
		dev_name = "pinmux";
		#pinmux-cells=<2>;    
    
//$$ MATCH "uart_ao_pin_match" = "&ao_uart_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"
        ao_uart_pins:ao_uart{
			amlogic,setmask=<10 0x1800>;
			amlogic,pins="GPIOAO_0", "GPIOAO_1";
		};
		
//$$ MATCH "uart_0_pin_match" = "&a_uart_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_STR 4 = "amlogic,pins"
		a_uart_pins:a_uart{
			amlogic,setmask=<4 0x3c00>;
			amlogic,pins="GPIOX_12", "GPIOX_13", "GPIOX_14", "GPIOX_15";
		};
		
//$$ MATCH "Nand_pin_0_match" = "&nand_input_state"
//$$ MATCH "Nand_pin_1_match" = "&nand_input_state"
//$$ L2 PROP_STR 18 = "amlogic,pins"
//$$ L2 PROP_U32 = "amlogic,enable-output"
		nand_input_state:nand_input{
			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
						"BOOT_5","BOOT_6","BOOT_7","BOOT_12","BOOT_13",
						"BOOT_8","BOOT_9","BOOT_10","BOOT_11",
						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
			amlogic,enable-output=<1>;
		};
		
//$$ MATCH "Nand_pin_0_match" = "&conf_nand_state"
//$$ MATCH "Nand_pin_1_match" = "&conf_nand_state"
//$$ L2 PROP_STR 9 = "amlogic,pins"
//$$ L2 PROP_U32 = "amlogic,pullup"
		conf_nand_state: conf_nand{
			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
						"BOOT_5","BOOT_6","BOOT_7","BOOT_15";
			amlogic,pullup=<0>;
		};
		
//$$ MATCH "Nand_pin_0_match" = "&nand_base"
//$$ MATCH "Nand_pin_1_match" = "&nand_base"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 17 = "amlogic,pins"
		nand_base: nand{
			amlogic,setmask=<2 0x7fe0000>;
			amlogic,clrmask=<	5 0xe
							6 0x3f000000
							4 0x7c000000>;
			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
						"BOOT_5","BOOT_6","BOOT_7","BOOT_8","BOOT_9",
						"BOOT_10","BOOT_12","BOOT_13",
						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
		};
		
//$$ MATCH "Card_pin_0_match" = "&sdhc_b_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"	
		sdhc_b_pins:sdhc_b_pin{
			amlogic,setmask=<2 0xfc00>;
			amlogic,clrmask=<2 0xf0 8 0x600>;
			amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
		};

//$$ MATCH "Card_pin_1_match" = "&sdhc_c_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"	
		sdhc_c_pins:sdhc_c_pin{
			amlogic,setmask=<6 0x3f000000>;
			amlogic,clrmask=<4 0x6c000000 2 0x4c00000>;
			amlogic,pins="BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_10","BOOT_11";
		};

//$$ MATCH "Card_pin_2_match" = "&sdhc_a_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 2 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"		
		sdhc_a_pins:sdhc_a_pin{
			amlogic,setmask=<8 0x3f>;
			amlogic,clrmask=<5 0x6c00 >;
			amlogic,pins="GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
		};

//$$ MATCH "sdio_pin_5_match" = "&sdio_all_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"	
//$$ L2 PROP_U32 = "amlogic,enable-output"
//$$ L2 PROP_U32 = "amlogic,pullup"
//$$ L2 PROP_U32 = "amlogic,pullupen"	
        sdio_all_pins:sdio_all_pins{
            amlogic,setmask=<8 0x0000003f>;         /*sdio a*/
            amlogic,clrmask=<6 0x3f000000           /*sdio c*/
                                2 0x0000fc00        /*sdio b*/
                                5 0x00006c00>;      /*sdhc a*/
            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
            amlogic,enable-output=<1>; /** 0:output, 1:input */
            amlogic,pullup=<1>;
            amlogic,pullupen=<1>;
        };
        
//$$ MATCH "sdio_pin_4_match" = "&sdio_clk_cmd_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"	
//$$ L2 PROP_U32 = "amlogic,enable-output"
//$$ L2 PROP_U32 = "amlogic,pullup"
//$$ L2 PROP_U32 = "amlogic,pullupen"
        sdio_clk_cmd_pins:sdio_clk_cmd_pins{
            amlogic,setmask=<8 0x00000003>;         /*sdio a*/
            amlogic,clrmask=<6 0x3f000000           /*sdio c*/
                                2 0x0000fc00        /*sdio b*/
                                5 0x00006c00>;      /*sdhc a*/
            amlogic,pins = "GPIOX_8","GPIOX_9"; /** GPIOX_8:CLK, GPIOX_9:CMD */
            amlogic,enable-output=<1>; /** 0:output, 1:input */
            amlogic,pullup=<1>;
            amlogic,pullupen=<1>;
        };

//$$ MATCH "sdio_pin_1_match" = "&sd_all_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"	
//$$ L2 PROP_U32 = "amlogic,enable-output"
//$$ L2 PROP_U32 = "amlogic,pullup"
//$$ L2 PROP_U32 = "amlogic,pullupen"
        sd_all_pins:sd_all_pins{
            amlogic,setmask=<2 0x0000fc00>;         /*sdio b*/
            amlogic,clrmask=<6 0x3f000000           /*sdio c*/
                                8 0x0000063f        /*sdio a, UART*/
                                2 0x000000f0>;      /*sdhc b*/
            amlogic,pins = "CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
            amlogic,enable-output=<1>; /* 0:output, 1:input */
            amlogic,pullup=<1>;
            amlogic,pullupen=<1>;
        };
        
//$$ MATCH "sdio_pin_6_match" = "&sd_1bit_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"	
//$$ L2 PROP_U32 = "amlogic,enable-output"
//$$ L2 PROP_U32 = "amlogic,pullup"
//$$ L2 PROP_U32 = "amlogic,pullupen"
        sd_1bit_pins:sd_1bit_pins{
            amlogic,setmask=<2 0x00008c00>;         /*sdio b*/
            amlogic,clrmask=<6 0x3f000000           /*sdio c*/
                                8 0x0000003f        /*sdio a*/
                                2 0x000000f0>;      /*sdhc b*/
            amlogic,pins = "CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
            amlogic,enable-output=<1>; /* 0:output, 1:input */
            amlogic,pullup=<1>;
            amlogic,pullupen=<1>;
        };
        
//$$ MATCH "sdio_pin_0_match" = "&sd_clk_cmd_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"	
//$$ L2 PROP_U32 = "amlogic,enable-output"
//$$ L2 PROP_U32 = "amlogic,pullup"
//$$ L2 PROP_U32 = "amlogic,pullupen"
        sd_clk_cmd_pins:sd_clk_cmd_pins{
            amlogic,setmask=<2 0x00000c00>;         /*sdio b*/
            amlogic,clrmask=<6 0x3f000000           /*sdio c*/
                                8 0x0000003f        /*sdio a*/
                                2 0x000000f0>;      /*sdhc b*/
            amlogic,pins = "CARD_2","CARD_3"; /** CARD_2:CLK, CARD_3:CMD */
            amlogic,enable-output=<1>; /** 0:output, 1:input */
            amlogic,pullup=<1>;
            amlogic,pullupen=<1>;
        };
        
//$$ MATCH "sdio_pin_3_match" = "&emmc_all_pins"  
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"	
//$$ L2 PROP_U32 = "amlogic,enable-output"
//$$ L2 PROP_U32 = "amlogic,pullup"
//$$ L2 PROP_U32 = "amlogic,pullupen"      
        emmc_all_pins:emmc_all_pins{
            amlogic,setmask=<6 0x3f000000>;         /*sdio c*/
            amlogic,clrmask=<2 0x04c0fc00           /*sdio b & nand*/
                                8 0x0000003f        /*sdio a*/
                                4 0x6c000000>;        /*sdhc c*/
            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_16","BOOT_17";
            amlogic,enable-output=<1>; /** 0:output, 1:input */
            amlogic,pullup=<1>;
            amlogic,pullupen=<1>;
        };
        
//$$ MATCH "sdio_pin_2_match" = "&emmc_clk_cmd_pins" 
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"	
//$$ L2 PROP_U32 = "amlogic,enable-output"
//$$ L2 PROP_U32 = "amlogic,pullup"
//$$ L2 PROP_U32 = "amlogic,pullupen"
        emmc_clk_cmd_pins:emmc_clk_cmd_pins{
            amlogic,setmask=<6 0x03000000>;         /*bit[24-25] */
            amlogic,clrmask=<2 0x04c0fc00           /*sdio b & nand*/
                                8 0x0000003f        /*sdio a*/
                                4 0x6c000000>;        /*sdhc c*/
            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
            amlogic,enable-output=<1>; /** 0:output, 1:input */
            amlogic,pullup=<1>;
            amlogic,pullupen=<1>;
        };

//$$ MATCH "I2C_AO_pin_match" = "&ao_i2c_master"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 2 = "amlogic,clrmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"
		ao_i2c_master:ao_i2c{
			amlogic,setmask=<10 0x60>;
			amlogic,clrmask=<10 0x1800006>;
			amlogic,pins="GPIOAO_4","GPIOAO_5";
		};
		
// MATCH "I2C_A_pin_match" = "&a_i2c_master"
// L2 PROP_U32 2 = "amlogic,setmask"
// L2 PROP_U32 2 = "amlogic,clrmask"
// L2 PROP_STR 2 = "amlogic,pins"
//		a_i2c_master:a_i2c{
//			amlogic,setmask=<5 0xc0000000>;
//			amlogic,clrmask=<9 0x58000 7 3000000>;
//			amlogic,pins="GPIOZ_0","GPIOZ_1";

//			amlogic,setmask=<5 0x300>;
//			amlogic,clrmask=<6 0x900 8 11000>;
//			amlogic,pins="GPIOZ_9","GPIOZ_10";

//			amlogic,setmask=<5 0xc0>;
//			amlogic,clrmask=<6 0xc0 8 0xc000>;
//			amlogic,pins="GPIOZ_11","GPIOZ_12";
//		};
		
//$$ MATCH "I2C_B_pin_match" = "&b_i2c_master"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"
		b_i2c_master:b_i2c{
			amlogic,setmask=<5 0xc000000>;
			amlogic,pins="GPIOZ_2","GPIOZ_3";
		};

// MATCH "I2C_C_pin_match" = "&c_i2c_master"
// L2 PROP_U32 2 = "amlogic,setmask"
// L2 PROP_U32 2 = "amlogic,clrmask"
// L2 PROP_STR 2 = "amlogic,pins"		
//		c_i2c_master:c_i2c{
//			amlogic,setmask=<5 0x3000000>;
//			amlogic,clrmask=<6 0xc000>;
//			amlogic,pins="GPIOZ_4","GPIOZ_5";

//			amlogic,setmask=<1 0xc000>;
//			amlogic,clrmask=<1 0xc0400 3 0x6 9 0x300>;
//			amlogic,pins="GPIOY_0","GPIOY_1";
//		};

//$$ MATCH "I2C_D_pin_match" = "&d_i2c_master"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"
		d_i2c_master:d_i2c{
			amlogic,setmask=<4 0xc>;
			amlogic,pins="GPIOH_7","GPIOH_8";
		};
		
//$$ MATCH "Bl_pin_0_match" = "&lcd_backlight_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR = "amlogic,pins"	
		lcd_backlight_pins:lcd_backlight{
			amlogic,setmask=<3 0x1000000>;
			amlogic,clrmask=<0 0x48 7 0x10000200>;
			amlogic,pins = "GPIODV_9";
		};
		
//$$ MATCH "Lcd_pin_0_match" = "&lcd_ttl_hvsync_pins_on"
//$$ MATCH "Lcd_pin_1_match" = "&lcd_ttl_hvsync_pins_on"
//$$ MATCH "Lcd_pin_3_match" = "&lcd_ttl_hvsync_pins_on"
//$$ MATCH "Lcd_pin_4_match" = "&lcd_ttl_hvsync_pins_on"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"
		lcd_ttl_hvsync_pins_on:lcd_ttl_hvsync_on{
			amlogic,setmask=<8 0x1800000>;
			amlogic,clrmask=<0 0x3c0300 6 0xc00000>;
			amlogic,pins = "GPIODV_24","GPIODV_25";
		};
		
//$$ MATCH "Lcd_pin_2_match" = "&lcd_ttl_hvsync_pins_off"
//$$ MATCH "Lcd_pin_5_match" = "&lcd_ttl_hvsync_pins_off"
//$$ MATCH "Lcd_pin_6_match" = "&lcd_ttl_hvsync_pins_off"
//$$ MATCH "Lcd_pin_7_match" = "&lcd_ttl_hvsync_pins_off"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR 2 = "amlogic,pins"
//$$ L2 PROP_U32 = "amlogic,enable-output"
		lcd_ttl_hvsync_pins_off:lcd_ttl_hvsync_off{
			amlogic,clrmask=<0 0x3c0300 6 0xc00000 8 0x1800000>;
			amlogic,pins = "GPIODV_24","GPIODV_25";
			amlogic,enable-output=<1>;
		};
		
//$$ MATCH "Lcd_pin_0_match" = "&lcd_ttl_de_pins_on"
//$$ MATCH "Lcd_pin_2_match" = "&lcd_ttl_de_pins_on"
//$$ MATCH "Lcd_pin_3_match" = "&lcd_ttl_de_pins_on"
//$$ MATCH "Lcd_pin_5_match" = "&lcd_ttl_de_pins_on"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR = "amlogic,pins"
		lcd_ttl_de_pins_on:lcd_ttl_de_on{
			amlogic,setmask=<8 0x10000000>;
			amlogic,clrmask=<0 0x400 6 0x100000 8 0x80000>;
			amlogic,pins = "GPIODV_27";
		};
		
//$$ MATCH "Lcd_pin_1_match" = "&lcd_ttl_de_pins_off"
//$$ MATCH "Lcd_pin_4_match" = "&lcd_ttl_de_pins_off"
//$$ MATCH "Lcd_pin_6_match" = "&lcd_ttl_de_pins_off"
//$$ MATCH "Lcd_pin_7_match" = "&lcd_ttl_de_pins_off"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR = "amlogic,pins"
//$$ L2 PROP_U32 = "amlogic,enable-output"
		lcd_ttl_de_pins_off:lcd_ttl_de_off{
			amlogic,clrmask=<0 0x400 6 0x100000 8 0x10080000>;
			amlogic,pins = "GPIODV_27";
			amlogic,enable-output=<1>;
		};
		
//$$ MATCH "Lcd_pin_0_match" = "&lcd_ttl_clk_pins_on"
//$$ MATCH "Lcd_pin_1_match" = "&lcd_ttl_clk_pins_on"
//$$ MATCH "Lcd_pin_2_match" = "&lcd_ttl_clk_pins_on"
//$$ MATCH "Lcd_pin_3_match" = "&lcd_ttl_clk_pins_on"
//$$ MATCH "Lcd_pin_4_match" = "&lcd_ttl_clk_pins_on"
//$$ MATCH "Lcd_pin_5_match" = "&lcd_ttl_clk_pins_on"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 6 = "amlogic,clrmask"
//$$ L2 PROP_STR = "amlogic,pins"
		lcd_ttl_clk_pins_on:lcd_ttl_clk_on{
			amlogic,setmask=<8 0x400000>;
			amlogic,clrmask=<0 0x80 6 0x200000 8 0x300000>;
			amlogic,pins = "GPIODV_26";
		};
		
//$$ MATCH "Lcd_pin_6_match" = "&lcd_ttl_clk_pins_off"
//$$ MATCH "Lcd_pin_7_match" = "&lcd_ttl_clk_pins_off"
//$$ L2 PROP_U32 6 = "amlogic,clrmask"
//$$ L2 PROP_STR = "amlogic,pins"
//$$ L2 PROP_U32 = "amlogic,enable-output"
		lcd_ttl_clk_pins_off:lcd_ttl_clk_off{
			amlogic,clrmask=<0 0x80 6 0x200000 8 0x700000>;
			amlogic,pins = "GPIODV_26";
			amlogic,enable-output=<1>;
		};
		
//$$ MATCH "Lcd_pin_3_match" = "&lcd_ttl_rgb_8bit_pins_on"
//$$ MATCH "Lcd_pin_4_match" = "&lcd_ttl_rgb_8bit_pins_on"
//$$ MATCH "Lcd_pin_5_match" = "&lcd_ttl_rgb_8bit_pins_on"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 8 = "amlogic,clrmask"
//$$ L2 PROP_STR 24 = "amlogic,pins"		
		lcd_ttl_rgb_8bit_pins_on:lcd_ttl_rgb_8bit_on{
			amlogic,setmask=<0 0x3f>;
			amlogic,clrmask=<0 0x40 3 0x1000000 7 0x1003ffff 8 0xe000000>;
			amlogic,pins = "GPIODV_0","GPIODV_1","GPIODV_2","GPIODV_3","GPIODV_4","GPIODV_5","GPIODV_6","GPIODV_7",		//R0~R7
						"GPIODV_8","GPIODV_9","GPIODV_10","GPIODV_11","GPIODV_12","GPIODV_13","GPIODV_14","GPIODV_15",	//G0~G7
						"GPIODV_16","GPIODV_17","GPIODV_18","GPIODV_19","GPIODV_20","GPIODV_21","GPIODV_22","GPIODV_23";//B0~B7
		};
		
//$$ MATCH "Lcd_pin_7_match" = "&lcd_ttl_rgb_8bit_pins_off"
//$$ L2 PROP_U32 8 = "amlogic,clrmask"
//$$ L2 PROP_STR 24 = "amlogic,pins"
//$$ L2 PROP_U32 = "amlogic,enable-output"
		lcd_ttl_rgb_8bit_pins_off:lcd_ttl_rgb_8bit_off{
			amlogic,clrmask=<0 0x7f 3 0x1000000 7 0x1003ffff 8 0xe000000>;
			amlogic,pins = "GPIODV_0","GPIODV_1","GPIODV_2","GPIODV_3","GPIODV_4","GPIODV_5","GPIODV_6","GPIODV_7",		//R0~R7
						"GPIODV_8","GPIODV_9","GPIODV_10","GPIODV_11","GPIODV_12","GPIODV_13","GPIODV_14","GPIODV_15",	//G0~G7
						"GPIODV_16","GPIODV_17","GPIODV_18","GPIODV_19","GPIODV_20","GPIODV_21","GPIODV_22","GPIODV_23";//B0~B7
			amlogic,enable-output=<1>;
		};
		
//$$ MATCH "Lcd_pin_0_match" = "&lcd_ttl_rgb_6bit_pins_on"
//$$ MATCH "Lcd_pin_1_match" = "&lcd_ttl_rgb_6bit_pins_on"
//$$ MATCH "Lcd_pin_2_match" = "&lcd_ttl_rgb_6bit_pins_on"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR 24 = "amlogic,pins"	
		lcd_ttl_rgb_6bit_pins_on:lcd_ttl_rgb_6bit_on{
			amlogic,setmask=<0 0x15>;
			amlogic,clrmask=<0 0x40 7 0xfcfc>;
			amlogic,pins = "GPIODV_2","GPIODV_3","GPIODV_4","GPIODV_5","GPIODV_6","GPIODV_7",		//R2~R7
						"GPIODV_10","GPIODV_11","GPIODV_12","GPIODV_13","GPIODV_14","GPIODV_15",	//G2~G7
						"GPIODV_18","GPIODV_19","GPIODV_20","GPIODV_21","GPIODV_22","GPIODV_23";	//B2~B7
		};
		
//$$ MATCH "Lcd_pin_6_match" = "&lcd_ttl_rgb_6bit_pins_off"
//$$ L2 PROP_U32 4 = "amlogic,clrmask"
//$$ L2 PROP_STR 24 = "amlogic,pins"
//$$ L2 PROP_U32 = "amlogic,enable-output"
		lcd_ttl_rgb_6bit_pins_off:lcd_ttl_rgb_6bit_off{
			amlogic,clrmask=<0 0x55 7 0xfcfc>;
			amlogic,pins = "GPIODV_2","GPIODV_3","GPIODV_4","GPIODV_5","GPIODV_6","GPIODV_7",		//R2~R7
						"GPIODV_10","GPIODV_11","GPIODV_12","GPIODV_13","GPIODV_14","GPIODV_15",	//G2~G7
						"GPIODV_18","GPIODV_19","GPIODV_20","GPIODV_21","GPIODV_22","GPIODV_23";	//B2~B7
			amlogic,enable-output=<1>;
        };

//$$ MATCH "remote_pin_0_match" = "&remote_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_STR = "amlogic,pins"
        	remote_pins:remote_pin{
			amlogic,setmask=<10 0x1>;
			amlogic,pins="GPIOAO_7";
		};

//$$ MATCH "Audio_pin_0_match" = "&audio_pins"
//$$ L2 PROP_U32 4 = "amlogic,setmask"
//$$ L2 PROP_U32 10 = "amlogic,clrmask"
//$$ L2 PROP_STR 6 = "amlogic,pins"
        audio_pins:audio_pin{
            amlogic,setmask=<1 0x80
                             1 0x75>;
            amlogic,clrmask=<1 0x10000
                             1 0x0a
                             3 0x389
                             4 0x3c00000
                             9 0xd>;
            amlogic,pins = "GPIOY_3","GPIOY_4","GPIOY_5","GPIOY_6","GPIOY_7","GPIOY_8";
        };

//$$ MATCH "Spi_pin_0_match" = "&aml_spi_nor_pins"
//$$ L2 PROP_U32 2 = "amlogic,setmask"
//$$ L2 PROP_U32 2 = "amlogic,clrmask"
//$$ L2 PROP_STR 4 = "amlogic,pins"
		aml_spi_nor_pins: aml_spi_nor_pins{
			amlogic,setmask=<5 0xf>;
			amlogic,clrmask=<2 0x380000>;
			amlogic,pins = "BOOT_11","BOOT_12","BOOT_13","BOOT_18";
		};

	};

}; /* end of / */
